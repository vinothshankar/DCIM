#pragma checksum "F:\Projects\DCIM\DCIM\dcim\DCIM\Views\MakePath\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c44f87301a74b48412df14dd11afc176c8d36ad5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MakePath_Index), @"mvc.1.0.view", @"/Views/MakePath/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\Projects\DCIM\DCIM\dcim\DCIM\Views\_ViewImports.cshtml"
using DCIM;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\Projects\DCIM\DCIM\dcim\DCIM\Views\_ViewImports.cshtml"
using DCIM.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\Projects\DCIM\DCIM\dcim\DCIM\Views\_ViewImports.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c44f87301a74b48412df14dd11afc176c8d36ad5", @"/Views/MakePath/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bec959a73b3084c86cd09f2c4a516f00b18d2f27", @"/Views/_ViewImports.cshtml")]
    public class Views_MakePath_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("IndexForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "F:\Projects\DCIM\DCIM\dcim\DCIM\Views\MakePath\Index.cshtml"
  
    ViewData["Title"] = "MakePath Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c44f87301a74b48412df14dd11afc176c8d36ad54273", async() => {
                WriteLiteral(@"
        <input type=""color"" id=""favcolor"" name=""favcolor"" value=""#ff0000"" disabled>
        <label for=""favcolor"">List Of Ports</label>
        <input type=""color"" id=""favcolor"" name=""favcolor"" value=""#ffff80"" disabled>
        <label for=""favcolor"">Selected Port</label>
        <input type=""color"" id=""favcolor"" name=""favcolor"" value=""#0000ff"" disabled>
        <label for=""favcolor"">Connected Port</label>
        <div style=""width: 100%; display: table;"">
            <div style=""display: table-row"">
                <div style=""width: 600px; display: table-cell;"">
                    Source :
                    <div class=""col-md-6"">
                        <label>Rack</label>
                        <select id=""SRack"" name=""SRack"" class=""form-control"" onchange=""SRackChange()"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c44f87301a74b48412df14dd11afc176c8d36ad55406", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>

                    </div>
                    <div class=""col-md-6"">
                        <label>Server</label>
                        <select id=""SServer"" name=""SServer"" class=""form-control"" onchange=""SServerChange()"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c44f87301a74b48412df14dd11afc176c8d36ad56887", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col-md-6"">
                        <label>Slot</label>
                        <select id=""SSlot"" name=""SSlot"" class=""form-control"" onchange=""SSlotChange()"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c44f87301a74b48412df14dd11afc176c8d36ad58358", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col-md-6"">
                        <label>Port</label>
                        <select id=""SPort"" name=""SPort"" class=""form-control"" onchange=""SviewImage()"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c44f87301a74b48412df14dd11afc176c8d36ad59828", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <br />
                    <div class=""box"">
                        <button type=""button"" onclick=""szoomin()"">
                            Zoom-In
                        </button>

                        <button type=""button"" onclick=""szoomout()"">
                            Zoom-Out
                        </button>
                        <img");
                BeginWriteAttribute("src", " src=\"", 2323, "\"", 2329, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""sImage"" width=""700"" height=""100"" style=""display:none"" />
                    </div>
                </div>
                <div style=""display: table-cell;"">
                    Destination :
                    <div class=""col-md-6"">
                        <label>Rack</label>
                        <select id=""DRack"" name=""DRack"" class=""form-control"" onchange=""DRackChange()"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c44f87301a74b48412df14dd11afc176c8d36ad512051", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>

                    </div>
                    <div class=""col-md-6"">
                        <label>Server</label>
                        <select id=""DServer"" name=""DServer"" class=""form-control"" onchange=""DServerChange()"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c44f87301a74b48412df14dd11afc176c8d36ad513533", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col-md-6"">
                        <label>Slot</label>
                        <select id=""DSlot"" name=""DSlot"" class=""form-control"" onchange=""DSlotChange()"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c44f87301a74b48412df14dd11afc176c8d36ad515005", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col-md-6"">
                        <label>Port</label>
                        <select id=""DPort"" name=""DPort"" class=""form-control"" onchange=""DviewImage()"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c44f87301a74b48412df14dd11afc176c8d36ad516476", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <br />
                    <div class=""box"">
                        <button type=""button"" onclick=""zoomin()"">
                            Zoom-In
                        </button>

                        <button type=""button"" onclick=""zoomout()"">
                            Zoom-Out
                        </button>
                        <img");
                BeginWriteAttribute("src", " src=\"", 4166, "\"", 4172, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"dImage\" width=\"700\" height=\"100\" style=\"display:none\" />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br />\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-md-12"">
        <div style=""text-align:center"">
            <button class=""btn btn-primary"" id=""MakePath"">Make Path</button>
        </div>
    </div>
</div>



<script>
    var SRack = $('#SRack');
    var SServer = $('#SServer');
    var SSlot = $('#SSlot');
    var SPort = $('#SPort');
    var DRack = $('#DRack');
    var DServer = $('#DServer');
    var DSlot = $('#DSlot');
    var DPort = $('#DPort');
    $(document).ready(function () {

        $('#MakePath').click(function () {
            $.ajax({
                url: ""/MakePath/MakePath"",
                type: ""POST"",
                data: $('#IndexForm').serializeArray(),
                success: function (data) {
                    if (data != """") {
                        alert(data);
                    } else {
                        alert(""Port Connected successfully"");
                    }
                    window.location.reload();
                },
              ");
            WriteLiteral(@"  error: function (data) {
                    console.log(data);
                }
            });
        })

        $.ajax({
            url: ""/MakePath/GetRacks?type=S"",
            type: ""GET"",
            success: function (data) {
                SRack.empty();
                SRack.append(
                    $('<option></option>')
                );
                $.each(data, function (index, value) {
                    SRack.append(
                        $('<option></option>').val(value['Id']).html(value['Rack1'])
                    );
                });
            },
            error: function (data) {
                console.log(data);
            }
        });

        $.ajax({
            url: ""/MakePath/GetRacks?type=D"",
            type: ""GET"",
            success: function (data) {
                DRack.empty();
                DRack.append(
                    $('<option></option>')
                );
                $.each(data, function (index, va");
            WriteLiteral(@"lue) {
                    DRack.append(
                        $('<option></option>').val(value['Id']).html(value['Rack1'])
                    );
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    })
    function SRackChange() {
        $.ajax({
            url: '/MakePath/GetServers?type=S&&rackId=' + $('#SRack').val(),
            type: ""GET"",
            success: function (data) {
                SServer.empty();
                SServer.append(
                    $('<option></option>')
                );
                $.each(data, function (index, value) {
                    SServer.append(
                        $('<option></option>').val(value['Id']).html(value['Server1'])
                    );
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    }
    function DRackChange(selectValue = null) {
  ");
            WriteLiteral(@"      $.ajax({
            url: '/MakePath/GetServers?type=D&&rackId=' + $('#DRack').val(),
            type: ""GET"",
            success: function (data) {
                DServer.empty();
                DServer.append(
                    $('<option></option>')
                );
                $.each(data, function (index, value) {
                    if (value['Id'] == selectValue) {
                        DServer.append(
                            $('<option selected=""selected""></option>').val(value['Id']).html(value['Server1'])
                        );
                    } else {
                        DServer.append(
                            $('<option></option>').val(value['Id']).html(value['Server1'])
                        );
                    }
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    }
    function DServerChange(selectValue = null, ServerId = null) {
        var va");
            WriteLiteral(@"l = $('#DServer').val() ? $('#DServer').val() : ServerId;
        $.ajax({
            url: '/MakePath/GetServerSlot?serverId=' + val,
            type: ""GET"",
            success: function (data) {
                DSlot.empty();
                DSlot.append(
                    $('<option></option>')
                );
                $.each(data, function (index, value) {
                    if (value['Id'] == selectValue) {
                        DSlot.append(
                            $('<option selected=""selected""></option>').val(value['Id']).html(value['SlotName'])
                        );
                    } else {
                        DSlot.append(
                            $('<option></option>').val(value['Id']).html(value['SlotName'])
                        );
                    }
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    }
    function SServerChange() {
        $.a");
            WriteLiteral(@"jax({
            url: '/MakePath/GetServerSlot?serverId=' + $('#SServer').val(),
            type: ""GET"",
            success: function (data) {
                SSlot.empty();
                SSlot.append(
                    $('<option></option>')
                );
                $.each(data, function (index, value) {
                    SSlot.append(
                        $('<option></option>').val(value['Id']).html(value['SlotName'])
                    );
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    }
    function DSlotChange(selectValue = null, slotId = null, serverId = null) {
        var val = $('#DSlot').val() ? $('#DSlot').val() : slotId;
        var serverVal = $('#DServer').val() ? $('#DServer').val() : serverId;
        $.ajax({
            url: '/MakePath/GetServerPorts?serverId=' + serverVal + ""&&slotId="" + val,
            type: ""GET"",
            success: function (data) {");
            WriteLiteral(@"
                DPort.empty();
                DPort.append(
                    $('<option></option>')
                );
                $.each(data, function (index, value) {
                    if (value['Id'] == selectValue) {
                        DPort.append(
                            $('<option selected=""selected""></option>').val(value['Id']).html(value['Port'])
                        );
                    } else {
                        DPort.append(
                            $('<option></option>').val(value['Id']).html(value['Port'])
                        );
                    }
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    }
    function SSlotChange() {
        $.ajax({
            url: '/MakePath/GetServerPorts?serverId=' + $('#SServer').val() + ""&&slotId="" + $('#SSlot').val(),
            type: ""GET"",
            success: function (data) {
                SPort.empty(");
            WriteLiteral(@");
                SPort.append(
                    $('<option></option>')
                );
                $.each(data, function (index, value) {
                    SPort.append(
                        $('<option></option>').val(value['Id']).html(value['Port'])
                    );
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    }
    function SviewImage() {

        $.ajax({
            url: ""/MakePath/GetDestinationIds?portId="" + $('#SPort').val(),
            type: ""GET"",
            success: function (data) {
                DRack.val(data['DRackId']).attr(""selected"", ""selected"");
                DRackChange(data['DServerId']);
                DServerChange(data['DSlotId'], data['DServerId']);
                DSlotChange(data['DPortId'], data['DSlotId'], data['DServerId']);
            },
            error: function (data) {
                console.log(data);
            }
        ");
            WriteLiteral(@"});

        $.ajax({
            url: ""/MakePath/GetServerSPortImage"",
            type: ""POST"",
            data: $('#IndexForm').serializeArray(),
            success: function (data) {
                if (data != """") {
                    $('#sImage').css('display', 'block');
                    $('#sImage').attr(""src"", ""data:image/Png;base64,"" + data + """");
                } else {
                    $('#sImage').css('display', 'none');
                }
                DviewImage();
            },
            error: function (data) {
                console.log(data);
            }
        });

    }
    function DviewImage() {
        $.ajax({
            url: ""/MakePath/GetServerDPortImage"",
            type: ""POST"",
            data: $('#IndexForm').serializeArray(),
            success: function (data) {
                if (data != """") {
                    $('#dImage').css('display', 'block');
                    $('#dImage').attr(""src"", ""data:image/Png;base64,"" + data");
            WriteLiteral(@" + """");
                } else {
                    $('#dImage').css('display', 'none');
                }
            },
            error: function (data) {
                console.log(data);
            }
        });
    }
    function zoomin() {
        var GFG = document.getElementById(""dImage"");
        var currHeight = GFG.clientHeight;
        var currWidth = GFG.clientWidth;
        GFG.style.height = (currHeight + 30) + ""px"";
        GFG.style.width = (currWidth + 100) + ""px"";
    }
    function zoomout() {
        var GFG = document.getElementById(""dImage"");
        var currHeight = GFG.clientHeight;
        var currWidth = GFG.clientWidth;
        GFG.style.height = (currHeight - 30) + ""px"";
        GFG.style.width = (currWidth - 100) + ""px"";
    }
    function szoomin() {
        var GFG = document.getElementById(""sImage"");
        var currHeight = GFG.clientHeight;
        var currWidth = GFG.clientWidth;
        GFG.style.height = (currHeight + 30) + ""px"";
        ");
            WriteLiteral(@"GFG.style.width = (currWidth + 100) + ""px"";
    }
    function szoomout() {
        var GFG = document.getElementById(""sImage"");
        var currHeight = GFG.clientHeight;
        var currWidth = GFG.clientWidth;
        GFG.style.height = (currHeight - 30) + ""px"";
        GFG.style.width = (currWidth - 100) + ""px"";
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
